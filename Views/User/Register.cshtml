@model ForumsUnknown.Models.FORUM_USERS

@{
    ViewBag.Title = "Register";
}

<div class="container mt-3">
    <div class="row justify-content-center">
        <div class="col-md-5">
            <div class="card border-1 bg-transparent p-5">
                <div class="card-header display-6 brawler-regular">
                    @ViewBag.Title
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, "Username", htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control bg-transparent text-white border-0 border-bottom rounded-0" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                        <br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control bg-transparent text-white border-0 border-bottom rounded-0" } })
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                        <br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control bg-transparent text-white border-0 border-bottom rounded-0" } })
                            @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                        </div>
                        <br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword)
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control bg-transparent text-white border-0 border-bottom rounded-0" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label class="@ViewBag.NotificationColor">@ViewBag.Notification</label>
                        </div>

                        <br />
                        <div class="form-group">
                            <div class="d-flex justify-content-center">
                                <input type="submit" value="Create" class="btn btn-dark rounded-0 w-100" onclick="confirmRegistration()" />
                            </div>
                            <br />
                            <div class="d-flex justify-content-center">
                                <p>
                                    Already have an account? <a href="~/Views/Home/Index.cshtml" class="text-white fw-bold">Login</a>
                                </p>
                            </div>
                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function confirmRegistration() {
        // Display confirmation dialog
        return confirm('Are you sure you want to create this account?');
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
